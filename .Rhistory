ggplot(aes(x=DATE)) +
geom_point(mapping = aes( y =  growth , col = growth_type))
growth_data |> select(base_growth) |>
pivot_longer(!DATE, names_to = "growth_type", values_to = "growth") |>
ggplot(aes(x=DATE)) +
geom_point(mapping = aes( y =  growth , col = growth_type))
growth_data |>   pivot_longer(!DATE, names_to = "growth_type", values_to = "growth") |>
ggplot(aes(x=DATE)) +
geom_point(mapping = aes( y =  growth , col = growth_type))
ggplot(data = growth_data, aes(x=DATE)) +
geom_line(mapping = aes( y = inflation), col = 'green')
growth_data |>   pivot_longer(!DATE, names_to = "growth_type", values_to = "growth") |> filter(growth < 100) |>
ggplot(aes(x=DATE)) +
geom_point(mapping = aes( y =  growth , col = growth_type))
growth_data <- growth_data |> mutate(M1_growth = if_else(M1_growth > 100, NaN, M1_growth))
long_growth <- growth_data |>   pivot_longer(!DATE, names_to = "growth_type", values_to = "growth") #for plotting
ggplot(long_growth, aes(x=DATE)) +
geom_point(mapping = aes( y =  growth , col = growth_type))
ggplot(long_growth |> filter(growth < 100), aes(x=DATE)) +
geom_point(mapping = aes( y =  growth , col = growth_type))
ggplot(long_growth |> filter(growth < 100), aes(DATE, growth)) +
geom_line() +
facet_wrap(~growth_type, scales = "free_y", ncol = 1)
ggplot(long_growth |> filter(growth < 100), aes(M2, growth)) +
geom_line() +
facet_wrap(~growth_type)
ggplot(data = growth_data |> filter(M1_growth < 50)) +
geom_point(mapping = aes( x = M1_growth, y= M2_growth), col = 'blue')
library(GGally)
pairs(growth_data |> filter(M1_growth < 50))
pairs(growth_data |> select(-DATE) |> filter(M1_growth < 50))
install.packages(GGally)
install.packages('GGally')
GGally::ggpairs(growth_data |> select(-DATE) |> filter(M1_growth < 50))
GGally::ggpairs(growth_data |> select(-DATE) |> filter(M1_growth < 50))
? ggpairs
GGally::ggpairs(growth_data |> select(-c(DATE,base_growth) |> filter(M1_growth < 50))
GGally::ggpairs(growth_data |> select(-c(DATE,base_growth)) |> filter(M1_growth < 50))
GGally::ggpairs(growth_data |> select(-c(DATE,inflation, FEDFUNDS)) |> filter(M1_growth < 50))
GGally::ggpairs(growth_data |> select(-c(DATE,inflation, FEDFUNDS)) |> filter(M1_growth < 50 & base_growth < 50))
inf_growth <- growth_data |> select(-DATE) |>   pivot_longer(!inflation, names_to = "growth_type", values_to = "growth") #for plotting
inf_growth <- growth_data |> select(-DATE) |>   pivot_longer(!inflation, names_to = "growth_type", values_to = "growth") #for plotting
ggplot(inf_growth |> filter(growth < 100), aes(growth, inflation)) +
geom_line() +
facet_wrap(~growth_type, scales = "free_y", ncol = 1)
inf_growth <- growth_data |> select(-DATE) |>   pivot_longer(!inflation, names_to = "growth_type", values_to = "growth") #for plotting
ggplot(inf_growth |> filter(growth < 100), aes(growth, inflation)) +
geom_line() +
facet_wrap(~growth_type)
inf_growth <- growth_data |> select(-DATE) |>   pivot_longer(!inflation, names_to = "growth_type", values_to = "growth") #for plotting
ggplot(inf_growth |> filter(growth < 50), aes(growth, inflation)) +
geom_line() +
facet_wrap(~growth_type)
inf_growth <- growth_data |> select(-DATE) |>   pivot_longer(!inflation, names_to = "growth_type", values_to = "growth") #for plotting
ggplot(inf_growth |> filter(growth < 50), aes(growth, inflation)) +
geom_point() +
facet_wrap(~growth_type)
growth_data |> select(-base_growth) |>
pivot_longer(!DATE, names_to = "growth_type", values_to = "growth") |>
filter(growth < 100 ) |>
ggplot(aes(x=DATE)) +
geom_point(mapping = aes( y =  growth , col = growth_type))
ggplot(data = filter(growth_data, M2_growth < 50), aes(y=M2_growth)) +
geom_point(mapping = aes( x =FEDFUNDS), col = 'blue')
Y = \(f) (\(x) f(x(x)))(\(x) f(x(x)))
#
fact <- Y(f)
#
fact <- Y(fact_h)
# Y Combinator:
Y <- \(f) (\(x) f(x(x)))(\(x) f(x(x)))
# This function takes the factorial function as an argument and returns the
# factorial reduced one step.
fact_h <- \(f){
\(n){
if(n==0) 1 else f(n-1)
}
}
#
fact <- Y(fact_h)
fact(3)
fact(5)
Y(Y)
source("~/devel/dataSci/TestFiles/fact.R", echo=TRUE)
fact(5)
Y(fact_h)
factorial(3)
fact_h(5, factorial)
fact_h(factorial)
fact_h(factorial)(3)
fact_h(factorial)(55)
fact_h(factorial)(12)
fact_h(factorial)(5)
Y(fact_h)
fact
libary(rlang)
library(rlang)
env(fact)
get_env(fact)
temp <- get_env(fact)
temp
env_print(temp)
env_get(temp)
env_get(env= temp,f)
env_get(env= temp,'f')
fact(0)
source("~/devel/dataSci/TestFiles/fact.R", echo=TRUE)
fact(4)
fact_2 <- Y(\(f){
\(n){
if(n==0) 1 else n*f(n-1)
}
}
)
fact_2(4)
fact_2 <- Y(\(f)
\(n)
if(n==0) 1 else n*f(n-1)
)
fact_2(3)
p1 <- 1/3
p2 <- 2/3
3/2*choose(3,2)*p1^2*(1-p1)
p1 <- 1/3
p2 <- 2/3
p1^2*(1-p1)/(p1^2*(1-p1)+p2^2*(1-p2))
? stop
stop
? .Internal
3 +3
3+3;
3+3;
x <- 3
x <- 1:10
x
x[2] <- 3
x
?`[<-`
`[<-`
`[<-`(x,2,value=3)
`[<-`(x,2,value=33)
library(tidyverse) #data Manipulation
library(highcharter) #interactive visualization
install.packages("highcharter")
library(tidyverse) #data Manipulation
library(highcharter) #interactive visualization
survey18 <- read_csv("../input/survey_results_public.csv")
survey18 <- read_csv("input/survey_results_public.csv")
#glimpse(survey18)
survey18 %>%
select(Gender) %>%
filter(!is.na(Gender)) %>%
filter(Gender %in% c('Male','Female')) %>%
count(Gender) %>%
mutate(perc = round((n /sum(n))*100)) -> gender_icons
hciconarray(c('Female','Male'),gender_icons$perc,icons = c('male','female'))
hciconarray
hciconarray
? hciconarray
survey18 %>%
select(Gender) %>%
filter(!is.na(Gender)) %>%
filter(Gender %in% c('Male','Female')) %>%
count(Gender) %>%
mutate(perc = round((n /sum(n))*100)) -> gender_icons
hciconarray(c('Female','Male'),gender_icons$perc,icons = c('male','female'))
hciconarray(c('Female','Male'),gender_icons$perc,icons = NULL)
hciconarray(c('Female','Male'),gender_icons$perc,icons = c('truck','car'))
? hc_add_dependency_fa
hc_add_dependency_fa
system.file("htmlwidgets/lib/font-awesome-4.7.0",
package = "highcharter")
htmlDependency(name = "font-awesome", version = "0.0.0",
src = c(file = system.file("htmlwidgets/lib/font-awesome-4.7.0",
package = "highcharter")), stylesheet = "css/font-awesome.min.css")
hc$dependencies <- c(hc$dependencies, list(dep))
fa_icon("male")
survey18 %>%
select(Gender) %>%
filter(!is.na(Gender)) %>%
filter(Gender %in% c('Male','Female')) %>%
count(Gender) %>%
mutate(perc = round((n /sum(n))*100)) -> gender_icons
hciconarray(c('Female','Male'),gender_icons$perc,icons = c('male','female'))
survey18 %>%
select(Gender) %>%
filter(!is.na(Gender)) %>%
filter(Gender %in% c('Male','Female')) %>%
count(Gender) %>%
mutate(perc = round((n /sum(n))*100)) -> gender_icons
hchart(gender_icons, "item", hcaes(name= Gender,y=perc))
? hciconarray
hciconarray
hciconarray(c('Female','Male'),gender_icons$perc)
methods(hchart)
?hchart.tibble
?hchart.tibble
?hchart
library(fontawesome)
fontawesome::fa_png("python")
? fa_png
library(rsvg)
install.packages("rsvg")
setwd("~/devel/dataSci/TestFiles")
library(rsvg)
fa_png("python", file = "temp.png")
survey18 %>%
select(Gender) %>%
filter(!is.na(Gender)) %>%
filter(Gender %in% c('Male','Female')) %>%
count(Gender) %>%
mutate(perc = round((n /sum(n))*100)) -> gender_icons
hciconarray(c('Female','Male'),gender_icons$perc,icons = c('male','female'))
library(rsvg)
library(fontawesome)
library(highcharter)
library(stringr)
set.seed(123)
df <- data.frame(
a = round(rnorm(10), 2),
b = round(rnorm(10), 2)
)
fa_to_png_to_datauri <- function(name, ...) {
tmpfl <- tempfile(fileext = ".png")
fontawesome::fa_png(name, file = tmpfl, ...)
knitr::image_uri(tmpfl)
}
# specify colors tu reuse in the series/tooltips
rcol <- "#4C83B6"
pcol <- "#3CAB48"
rproj <- fa_to_png_to_datauri(name = "r-project", width = 22, fill = rcol)
pthon <- fa_to_png_to_datauri(name = "python",    width = 22, fill = pcol)
highchart() |>
hc_title(
text = "This is chart using fontawesome icons2",
useHTML = TRUE
) |>
hc_add_series(
df,
"scatter",
hcaes(a, b),
name = "R icons",
color = rcol,
marker = list(symbol = str_glue("url({data_uri})", data_uri = rproj)),
icon = rproj
) |>
hc_add_series(
df,
"scatter",
hcaes(b, a),
name = "Python icons",
color = pcol,
marker = list(symbol = str_glue("url({data_uri})", data_uri = pthon)),
icon = pthon
) |>
hc_tooltip(
pointFormat = str_c(
"<b>",
"<img style='vertical-align:middle' height='15' src='{series.options.icon}'/> ",
"[{point.x}, {point.y}]",
"</b>"
),
useHTML = TRUE
)
readRDS(system.file("extdata/faicos.rds", package = "highcharter"))
system.file("extdata/faicos.rds", package = "highcharter")
? system.file
system.file(package = "highcharter")
system.file("extdataa", package = "highcharter")
system.file("extdata", package = "highcharter")
system.file("data", package = "highcharter")
? fa_icon_mark
fa_icon_mark()
fa_icon_mark
fa_icon_mark()
fa_icon()
fa_icon_mark()
library(tidyverse) #data Manipulation
library(highcharter) #interactive visualization
survey18 <- read_csv("input/survey_results_public.csv")
#glimpse(survey18)
survey18 %>%
select(Gender) %>%
filter(!is.na(Gender)) %>%
filter(Gender %in% c('Male','Female')) %>%
count(Gender) %>%
mutate(perc = round((n /sum(n))*100)) -> gender_icons
hciconarray(c('Female','Male'),gender_icons$perc,icons = c('male','female'))
setwd("~/devel/dataSci/ROS/ROSWork")
library(tidyverse)
grid_approx <- tibble(f = 35:75/100, p = dbinom(x= 60-(1-f)*100,size=(1-f)*100,p=1/4)) |>
mutate(p = p/sum(p))
ggplot(grid_approx, aes(x=f,y=p)) + geom_line()
?dbinom
grid_approx <- tibble(f = 350:750/1000, p = dbinom(x= 60-(1-f)*100,size=(1-f)*100,p=1/4)) |>
mutate(p = p/sum(p))
ggplot(grid_approx, aes(x=f,y=p)) + geom_line()
choose(100,3)
choose(100.0,3.3)
gamma(3)
gamma(6)
factorial(6)
factorial(6-1)
factorial(6+1)
dbinom2 <- \(x,size,p) {
gamma(size+1)/(gamma(x+1)gamma(size-x+1))*p^x*(1-p)^(size-x)
dbinom2 <- \(x,size,p) {
gamma(size+1)/(gamma(x+1)*gamma(size-x+1))*p^x*(1-p)^(size-x)
}
grid_approx <- tibble(f = 350:750/1000,
p = dbinom2(x= 60-(1-f)*100,size=(1-f)*100,p=1/4)) |>
mutate(p = p/sum(p))
ggplot(grid_approx, aes(x=f,y=p)) + geom_line()
.3^(3.3)
dbinom2(3,100,.25)
dbinom(3,100,.25)
dbinom(3,100,.25)
dbinom2(3.3,100,.25)
dbinom2(3.3,100.3,.25)
dbinom2 <- \(x,size,p) {
gamma(size+1)/(gamma(x+1)*gamma(size-x+1))*p^x*(1-p)^(size-x)
}
grid_approx <- tibble(f = 350:750/1000,
p = dbinom2(x= 60-(1-f)*100,size=(1-f)*100,p=1/4)) |>
mutate(p = p/sum(p))
ggplot(grid_approx, aes(x=f,y=p)) + geom_line()
dbinom2 <- \(x,size,p) {
print(x,size,p)
gamma(size+1)/(gamma(x+1)*gamma(size-x+1))*p^x*(1-p)^(size-x)
}
grid_approx <- tibble(f = 350:750/1000,
p = dbinom2(x= 60-(1-f)*100,size=(1-f)*100,p=1/4)) |>
mutate(p = p/sum(p))
dbinom2(3.3,100.3,.25)
dbinom2 <- \(x,size,p) {
gamma(size+1)/(gamma(x+1)*gamma(size-x+1))*p^x*(1-p)^(size-x)
}
grid_approx <- tibble(f = 350:750/1000,
p = dbinom2(x= 60-(1-f)*100,size=(1-f)*100,p=1/4)) |>
mutate(p = p/sum(p))
ggplot(grid_approx, aes(x=f,y=p)) + geom_line()
p
grid_approx$p
grid_approx$f
dbinom2 <- \(x,size,p) {
gamma(size+1)/(gamma(x+1)*gamma(size-x+1))*p^x*(1-p)^(size-x)
}
grid_approx <- tibble(f = 350:750/1000) |> rowwise() |>
mutate( p = dbinom2(x= 60-(1-f)*100,size=(1-f)*100,p=1/4)) |>
mutate(p = p/sum(p))
ggplot(grid_approx, aes(x=f,y=p)) + geom_line()
p
dbinom2(x=50, size =100, p= .5)
dbinom(x=50, size =100, p= .5)
dbinom(x=50, size =100:120, p= .5)
dbinom(x=50:70, size =100:120, p= .5)
dbinom2 <- \(x,size,p) {
gamma(size+1)/(gamma(x+1)*gamma(size-x+1))*p^x*(1-p)^(size-x)
}
grid_approx <- tibble(f = 350:750/1000)  |> rowwise() |>
mutate(p = dbinom2(x= 60-(1-f)*100,size=(1-f)*100,p=1/4)) |>
mutate(p = p/sum(p))
ggplot(grid_approx, aes(x=f,y=p)) + geom_line()
f
dbinom2(x=60-(1-.33)*100, size = (1-.33)*100, p=1/4)
60-(1-.33)*100
dbinom2 <- \(x,size,p) {
gamma(size+1)/(gamma(x+1)*gamma(size-x+1))*p^x*(1-p)^(size-x)
}
grid_approx <- tibble(f = 350:750/1000)  |> rowwise() |>
mutate(p = dbinom2(x= 600-(1-f)*100,size=(1-f)*100,p=1/4)) |>
mutate(p = p/sum(p))
ggplot(grid_approx, aes(x=f,y=p)) + geom_line()
.35*100
dbinom2 <- \(x,size,p) {
gamma(size+1)/(gamma(x+1)*gamma(size-x+1))*p^x*(1-p)^(size-x)
}
grid_approx <- tibble(f = 35:75/1000)  |> rowwise() |>
mutate(p = dbinom2(x= 60-(1-f)*100,size=(1-f)*100,p=1/4)) |>
mutate(p = p/sum(p))
ggplot(grid_approx, aes(x=f,y=p)) + geom_line()
dbinom2 <- \(x,size,p) {
gamma(size+1)/(gamma(x+1)*gamma(size-x+1))*p^x*(1-p)^(size-x)
}
grid_approx <- tibble(f = 35:75/1000)  |>
mutate(p = dbinom(x= 60-(1-f)*100,size=(1-f)*100,p=1/4)) |>
mutate(p = p/sum(p))
ggplot(grid_approx, aes(x=f,y=p)) + geom_line()
dbinom2 <- \(x,size,p) {
gamma(size+1)/(gamma(x+1)*gamma(size-x+1))*p^x*(1-p)^(size-x)
}
grid_approx <- tibble(f = 35:75/100)  |>
mutate(p = dbinom(x= 60-(1-f)*100,size=(1-f)*100,p=1/4)) |>
mutate(p = p/sum(p))
ggplot(grid_approx, aes(x=f,y=p)) + geom_line()
dbinom2 <- \(x,size,p) {
gamma(size+1)/(gamma(x+1)*gamma(size-x+1))*p^x*(1-p)^(size-x)
}
grid_approx <- tibble(f = 35:75/100)  |> rowwise() |>
mutate(p = dbinom(x= 60-(1-f)*100,size=(1-f)*100,p=1/4)) |>
mutate(p = p/sum(p))
ggplot(grid_approx, aes(x=f,y=p)) + geom_line()
60-(1-.35)*100
dbinom2 <- \(x,size,p) {
gamma(size+1)/(gamma(x+1)*gamma(size-x+1))*p^x*(1-p)^(size-x)
}
grid_approx <- tibble(f = 35:75/100)  |> rowwise() |>
mutate(p = dbinom(x= 60-f*100,size=(1-f)*100,p=1/4)) |>
mutate(p = p/sum(p))
ggplot(grid_approx, aes(x=f,y=p)) + geom_line()
60-.35*100
dbinom2 <- \(x,size,p) {
gamma(size+1)/(gamma(x+1)*gamma(size-x+1))*p^x*(1-p)^(size-x)
}
grid_approx <- tibble(f = 35:59/100)  |> rowwise() |>
mutate(p = dbinom(x= 60-f*100,size=(1-f)*100,p=1/4)) |>
mutate(p = p/sum(p))
ggplot(grid_approx, aes(x=f,y=p)) + geom_line()
View(grid_approx)
dbinom(x= 60-f*100,size=(1-f)*100,p=1/4))
dbinom(x= 60-f*100,size=(1-f)*100,p=1/4)
dbinom(x= 60-f*100,size=(1-f)*100,p=1/4)
f = .35
dbinom(x= 60-f*100,size=(1-f)*100,p=1/4)
dbinom(x= 60-f*100,size=(1-f)*100,p=1/4)
f = .55
dbinom(x= 60-f*100,size=(1-f)*100,p=1/4)
f = .59
dbinom(x= 60-f*100,size=(1-f)*100,p=1/4)
purr::map
?purrr::map
dbinom2 <- \(x,size,p) {
gamma(size+1)/(gamma(x+1)*gamma(size-x+1))*p^x*(1-p)^(size-x)
}
grid_approx <- tibble(f = 35:59/100)   |>
mutate(p = dbinom(x= 60-f*100,size=(1-f)*100,p=1/4)) |>
mutate(p = p/sum(p))
ggplot(grid_approx, aes(x=f,y=p)) + geom_line()
f = 0.45
dbinom(x= 60-f*100,size=(1-f)*100,p=1/4)
dbinom2 <- \(x,size,p) {
gamma(size+1)/(gamma(x+1)*gamma(size-x+1))*p^x*(1-p)^(size-x)
}
grid_approx <- tibble(f = 35:59/100)   |>
mutate(p = dbinom2(x= 60-f*100,size=(1-f)*100,p=1/4)) |>
mutate(p = p/sum(p))
ggplot(grid_approx, aes(x=f,y=p)) + geom_line()
dbinom2 <- \(x,size,p) {
gamma(size+1)/(gamma(x+1)*gamma(size-x+1))*p^x*(1-p)^(size-x)
}
grid_approx <- tibble(f = 350:590/1000)   |>
mutate(p = dbinom2(x= 60-f*100,size=(1-f)*100,p=1/4)) |>
mutate(p = p/sum(p))
ggplot(grid_approx, aes(x=f,y=p)) + geom_line()
grid_approx <- grid_approx |> mutate( cdf = cumsum(p))
grid_approx |> filter((abs(cdf - .025) < .02) | (abs(cdf - .975) < .02))
grid_approx <- grid_approx |> mutate( cdf = cumsum(p))
grid_approx |> filter((abs(cdf - .025) < .01) | (abs(cdf - .975) < .01))
grid_approx <- grid_approx |> mutate( cdf = cumsum(p))
grid_approx |> filter((abs(cdf - .025) < .001) | (abs(cdf - .975) < .001))
se = sqrt(1/4*3/4/((1-.467)*100))
qnorm(c(.025,.975),.467,sd = se)
60-qbinom(c(.025,.975),100*(1-.467),.25)
grid_approx <- tibble(f = 350:590/1000)   |> rowwise() |>
mutate(p = dbinom2(x= 60-f*100,size=(1-f)*100,p=1/4)) |> ungroup() |>
mutate(p = p/sum(p))
grid_approx <- tibble(f = 350:590/1000)   |> rowwise() |>
mutate(p = dbinom(x= 60-f*100,size=(1-f)*100,p=1/4)) |> ungroup() |>
mutate(p = p/sum(p))
grid_approx <- tibble(f = 350:590/1000)   |> rowwise() |>
mutate(p = dbinom2(x= 60-f*100,size=(1-f)*100,p=1/4)) |> ungroup() |>
mutate(p = p/sum(p))
ggplot(grid_approx, aes(x=f,y=p)) + geom_line()
round(3.3)
round(3.6)
grid_approx <- tibble(f = 350:590/1000)    |>
mutate(p = dbinom(x= round(60-f*100),size=round((1-f)*100),p=1/4)) |>
mutate(p = p/sum(p))
ggplot(grid_approx, aes(x=f,y=p)) + geom_line()
dbinom2 <- \(x,size,p) {
gamma(size+1)/(gamma(x+1)*gamma(size-x+1))*p^x*(1-p)^(size-x)
}
grid_approx <- tibble(f = 350:590/1000,
p = dbinom2(x= 60-f*100,size=(1-f)*100,p=1/4)) |>
mutate(p = p/sum(p))
ggplot(grid_approx, aes(x=f,y=p)) + geom_line()
grid_approx <- grid_approx |> mutate( cdf = cumsum(p))
grid_approx |> filter((abs(cdf - .025) < .001) | (abs(cdf - .975) < .001))
60-qbinom(c(.025,.975),100*(1-.467),.25)
60-qbinom(c(.975,.025),100*(1-.467),.25)
dbinom2 <- \(x,size,p) {
gamma(size+1)/(gamma(x+1)*gamma(size-x+1))*p^x*(1-p)^(size-x)
}
grid_approx <- tibble(f = 300:600/1000,
p = dbinom2(x= 60-f*100,size=(1-f)*100,p=1/4)) |>
mutate(p = p/sum(p))
ggplot(grid_approx, aes(x=f,y=p)) + geom_line()
qbinom(c(0.025,.975),40,.25)
qbinom(c(0.025,.975),40,.25)
qnorm(c(0.25,0.975),50*.25,sqrt(.25*.75*50))
qbinom(c(0.025,.975),40,.25)
qnorm(c(0.25,0.975),50*.25,sqrt(.25*.75/50))
qbinom(c(0.025,.975),40,.25)
qnorm(c(0.25,0.975),50*.25,sqrt(.25*.75*50))
qbinom(c(0.025,.975),50,.25)
qnorm(c(0.25,0.975),50*.25,sqrt(.25*.75*50))
qbinom(c(0.025,.975),500,.25)
qnorm(c(0.25,0.975),500*.25,sqrt(.25*.75*500))
qbinom(c(0.025,.975),5000,.25)
qnorm(c(0.25,0.975),5000*.25,sqrt(.25*.75*5000))
qbinom(c(0.025,.975),500,.25)
qnorm(c(0.25,0.975),500*.25,sqrt(.25*.75*500))
