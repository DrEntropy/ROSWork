n <- nrow(beauty)
shuffled_index <- sample(1:n, n, replace = FALSE)
shuffled_index[1:n/5]
folds = 5
n <- nrow(beauty)
shuffled_index <- sample(1:n, n, replace = FALSE)
shuffled_index
folds = 5
n <- nrow(beauty)
shuffled_index <- sample(1:n, n, replace = FALSE)
shuffled_index[[1:5]]
folds = 5
n <- nrow(beauty)
shuffled_index <- sample(1:n, n, replace = FALSE)
shuffled_index[[1]]
n/5
shuffled_index[1:10]
shuffled_index[1:33]
shuffled_index[1:n/5]
shuffled_index[1:floor(n/5)]
folds = 5
n <- nrow(beauty)
shuffled_index <- sample(1:n, n, replace = FALSE)
for(i in 1:folds)
{
print(i)
}
beauty(-(1:100))
beauty[-(1:100)]
beauty[-(1:100),]
nrow(beauty)
beauty[-(1:460),]
tail(beauty)
folds = 5
n <- nrow(beauty)
shuffled_index <- sample(1:n, n, replace = FALSE)
start = 1
for(i in 1:folds)
{
end = start + floor(n/5)
data <- beauty[-(start:end),]
#fit_1 <- stan_glm(eval ~ beauty + female , data = data, refresh=0)
#fit_3 <- stan_glm(eval ~ beauty + female + nonenglish , data = data, refresh=0)
start = end + 1
}
length(beauty)
nrow(beauty)
1:3
folds = 5
n <- nrow(beauty)
shuffled_index <- sample(1:n, n, replace = FALSE)
start = 1
for(i in 1:folds)
{
end = start + floor(n/5) - 1
data <- beauty[-(start:end),]
#fit_1 <- stan_glm(eval ~ beauty + female , data = data, refresh=0)
#fit_3 <- stan_glm(eval ~ beauty + female + nonenglish , data = data, refresh=0)
start = end + 1
}
floor(n/5)*4
floor(n/5)*5
n
fit_3
predict(fit_3) - beauty$eval
sum((predict(fit_3) - beauty$eval)^2)
folds = 5
n <- nrow(beauty)
shuffled_index <- sample(1:n, n, replace = FALSE)
residuals_1 <- rep(0,5)
residuals_3 <- rep(0,5)
start = 1
for(i in 1:folds)
{
end = start + floor(n/5) - 1
data <- beauty[-(start:end),]
fit_1 <- stan_glm(eval ~ beauty + female , data = data, refresh=0)
residuals_1[[i]] <- sum((predict(fit_1) - beauty$eval)^2)
fit_3 <- stan_glm(eval ~ beauty + female + nonenglish , data = data, refresh=0)
residuals_3[[i]] <- sum((predict(fit_3) - beauty$eval)^2)
start = end + 1
}
folds = 5
n <- nrow(beauty)
shuffled_index <- sample(1:n, n, replace = FALSE)
residuals_1 <- rep(0,5)
residuals_3 <- rep(0,5)
start = 1
for(i in 1:folds)
{
end = start + floor(n/5) - 1
data <- beauty[-(start:end),]
fit_1 <- stan_glm(eval ~ beauty + female , data = data, refresh=0)
residuals_1[[i]] <- sum((predict(fit_1) - data$eval)^2)
fit_3 <- stan_glm(eval ~ beauty + female + nonenglish , data = data, refresh=0)
residuals_3[[i]] <- sum((predict(fit_3) - data$eval)^2)
start = end + 1
}
print(sum(residuals_1))
print(sum(residuals_3))
print(mean(residuals_1))
print(mean(residuals_3))
sd(residuals_3)
sqrt(sd(residuals_3)^2 + sd(residuals_1)^2)
sqrt(sd(residuals_3)^2/5 + sd(residuals_1)^2/5)
ceil(n/5)
ceiling(n/4)
ceiling(n/5)*5
ceiling(n/5)
floor(n/5)
folds = 5
n <- nrow(beauty)
shuffled_index <- sample(1:n, n, replace = FALSE)
residuals_1 <- rep(0,5)
residuals_3 <- rep(0,5)
start = 1
for(i in 1:folds)
{
end = start + ceiling(n/5) - 1
data <- beauty[-(start:end),]
fit_1 <- stan_glm(eval ~ beauty + female , data = data, refresh=0)
residuals_1[[i]] <- sum((predict(fit_1) - data$eval)^2)
fit_3 <- stan_glm(eval ~ beauty + female + nonenglish , data = data, refresh=0)
residuals_3[[i]] <- sum((predict(fit_3) - data$eval)^2)
start = end + 1
}
print(mean(residuals_1))
print(mean(residuals_3))
sqrt(sd(residuals_3)^2/5 + sd(residuals_1)^2/5)
end
nrow(beauty)
beauty[-(400:465)]
beauty[-(400:465),]
beauty[-(2:465),]
folds = 5
n <- nrow(beauty)
shuffled_index <- sample(1:n, n, replace = FALSE)
residuals_1 <- rep(0,5)
residuals_3 <- rep(0,5)
start = 1
for(i in 1:folds)
{
end = start + ceiling(n/5) - 1
data <- beauty[-(start:end),]
print(paste0("Fold ",i, ", length", nrow(data)))
fit_1 <- stan_glm(eval ~ beauty + female , data = data, refresh=0)
residuals_1[[i]] <- sum((predict(fit_1) - data$eval)^2)
fit_3 <- stan_glm(eval ~ beauty + female + nonenglish , data = data, refresh=0)
residuals_3[[i]] <- sum((predict(fit_3) - data$eval)^2)
start = end + 1
}
round(2.1)
round(n/5
)
folds = 5
n <- nrow(beauty)
shuffled_index <- sample(1:n, n, replace = FALSE)
residuals_1 <- rep(0,5)
residuals_3 <- rep(0,5)
start = 1
for(i in 1:folds)
{
end = start + round(n/5) - 1
data <- beauty[-(start:end),]
print(paste0("Fold ",i, ", length", nrow(data)))
fit_1 <- stan_glm(eval ~ beauty + female , data = data, refresh=0)
residuals_1[[i]] <- sum((predict(fit_1) - data$eval)^2)
fit_3 <- stan_glm(eval ~ beauty + female + nonenglish , data = data, refresh=0)
residuals_3[[i]] <- sum((predict(fit_3) - data$eval)^2)
start = end + 1
}
folds = 5
n <- nrow(beauty)
shuffled_index <- sample(1:n, n, replace = FALSE)
residuals_1 <- rep(0,5)
residuals_3 <- rep(0,5)
start = 1
for(i in 1:folds)
{
end = start + n/5 - 1
data <- beauty[-(start:round(end)),]
print(paste0("Fold ",i, ", length", nrow(data)))
fit_1 <- stan_glm(eval ~ beauty + female , data = data, refresh=0)
residuals_1[[i]] <- sum((predict(fit_1) - data$eval)^2)
fit_3 <- stan_glm(eval ~ beauty + female + nonenglish , data = data, refresh=0)
residuals_3[[i]] <- sum((predict(fit_3) - data$eval)^2)
start = round(end) + 1
}
folds = 5
n <- nrow(beauty)
shuffled_index <- sample(1:n, n, replace = FALSE)
residuals_1 <- rep(0,5)
residuals_3 <- rep(0,5)
start = 1
for(i in 1:folds)
{
end = start + n/5 - 1
data <- beauty[-(round(start):round(end)),]
print(paste0("Fold ",i, ", length", nrow(data)))
fit_1 <- stan_glm(eval ~ beauty + female , data = data, refresh=0)
residuals_1[[i]] <- sum((predict(fit_1) - data$eval)^2)
fit_3 <- stan_glm(eval ~ beauty + female + nonenglish , data = data, refresh=0)
residuals_3[[i]] <- sum((predict(fit_3) - data$eval)^2)
start = end + 1
}
print(mean(residuals_1))
print(mean(residuals_3))
sqrt(sd(residuals_3)^2/5 + sd(residuals_1)^2/5)
library(tidyverse)
read_csv(here::here('cows.csv'))
?read_csv
read_csv(here::here('cows.csv'), col_types = 'dfdddddddd')
cows <- read_csv(here::here('cows.csv'), col_types = 'dfdddddddd')
View(cows)
library(tidyverse)
library(rstanarm)
cows <- read_csv(here::here('cows.csv'), col_types = 'dfdddddddd')
cows <- read_csv(here::here('cows.csv'), col_types = 'dfdddddddd')
cows$mdmf <- cows$milk*cows$fat
View(cows)
cows <- read_csv(here::here('cows.csv'), col_types = 'dfdddddddd')
cows$mdmf <- cows$milk*cows$fat/100
fit <- stan_glm(mdmf ~ level, data = cows)
fit
fit <- stan_glm(mdmf ~ level, data = cows, refresh=0)
fit
fit2 <- stan_glm(mdmf ~ level + lactation + initial_weight, data = cows, refresh=0)
fit2
fit2 <- stan_glm(mdmf ~ level + age + lactation + initial_weight, data = cows, refresh=0)
fit2
fit2 <- stan_glm(mdmf ~ level + age + lactation + initial_weight, data = cows, refresh=0)
summary(fit2, digits=3)
fit2 <- stan_glm(mdmf ~ level + age + lactation + initial_weight, data = cows, refresh=0)
print(fit2, digits=3)
fit3 <- stan_glm(mdmf ~ factor(level) + age + lactation + initial_weight, data = cows, refresh=0)
print(fit3, digits=3)
coef(fit2)
sd(fit2)
se(fit2)
levels = set(cows$level)
levels = unique(cows$level)
levels = unique(cows$level)
plot_data = tibble(levels = levels)
View(plot_data)
levels
plot_data = tibble(level = unique(cows$level)[-1]) |>
mutate(effect_b = level)
coef(fitc)[1:2]
coef(fit3)[1:2]
coef(fit3)[2:3]
coef(fit3)[2:4]
plot_data = tibble(level = unique(cows$level)[-1]) |>
mutate(effect_b = level*coef(fit2)[1],
effect_c = coef(fit3)[2:4])
plot_data = tibble(level = unique(cows$level)[-1]) |>
mutate(effect_c = coef(fit3)[2:4],
se_c = se(fit3)[2:4])
plot_data |> ggplot() + geom_point(aes(x = level, y= effect_c))
? geom_errorbar
plot_data = tibble(level = unique(cows$level)[-1]) |>
mutate(effect_c = coef(fit3)[2:4],
se_c = se(fit3)[2:4])
plot_data |>
ggplot() + geom_point(aes(x = level, y= effect_c)) +
geom_errorbar(aes(x=level, ymin = effect_c - se_c, ymax= effect_c + se_c)
plot_data = tibble(level = unique(cows$level)[-1]) |>
mutate(effect_c = coef(fit3)[2:4],
se_c = se(fit3)[2:4])
plot_data |>
ggplot() + geom_point(aes(x = level, y= effect_c)) +
geom_errorbar(aes(x=level, ymin = effect_c - se_c, ymax= effect_c + se_c))
plot_data = tibble(level = unique(cows$level)[-1]) |>
mutate(effect_b = coef(fit2)[1]*level,
effect_c = coef(fit3)[2:4],
se_c = se(fit3)[2:4])
plot_data |>
ggplot() + geom_point(aes(x = level, y= effect_c)) +
geom_errorbar(aes(x=level, ymin = effect_c - se_c, ymax= effect_c + se_c)) +
geom_line(aes(x = level, y = effect_b ))
plot_data = tibble(level = unique(cows$level)[-1]) |>
mutate(effect_b = coef(fit2)[1]*level,
effect_c = coef(fit3)[2:4],
se_c = se(fit3)[2:4])
plot_data |>
ggplot() + geom_point(aes(x = level, y= effect_c)) +
geom_errorbar(aes(x=level, ymin = effect_c - se_c, ymax= effect_c + se_c)) +
geom_line(aes(x = level, y = effect_b ), color = 'red')
fit_2_draws <- as_tibble(fit2)
num_lines = 40
fit_2_draws <- as_tibble(fit2)
level_x = seq(0,.4,100)
? seq
num_lines = 40
fit_2_draws <- as_tibble(fit2)
level_x = seq(0,.4,.02)
? for
for(i in 1:num_lines)
?? for
()
fit_2_draws[2,]
fit_2_draws[2,2]
coef(fit_2)
coef(fit2)
coef(fit2)[1]
coef(fit2)[2]
plot_data = tibble(level = unique(cows$level)[-1]) |>
mutate(effect_b = coef(fit2)[2]*level,
effect_c = coef(fit3)[2:4],
se_c = se(fit3)[2:4])
plot_data |>
ggplot() + geom_point(aes(x = level, y= effect_c)) +
geom_errorbar(aes(x=level, ymin = effect_c - se_c, ymax= effect_c + se_c)) +
geom_line(aes(x = level, y = effect_b ), color = 'red')
plot_data = tibble(level = unique(cows$level)[-1]) |>
mutate(effect_b = coef(fit2)[1]*level,
effect_c = coef(fit3)[2:4],
se_c = se(fit3)[2:4])
num_lines <- 4
fit_2_draws <- as_tibble(fit2)
plot_b_data <- tibble(level_x = seq(0,.4,.02))
base_plot <- plot_data |>
ggplot() + geom_point(aes(x = level, y= effect_c)) +
geom_errorbar(aes(x=level, ymin = effect_c - se_c, ymax= effect_c + se_c))
plot <- base_plot
for(i in 1:num_lines)
{
plot_b_data |> mutate(y = fit_2_draws[i,2]*level_x + fit_2_draws[i,1])
plot <- plot + geom_line(aes(x=level_x, y = y), color = "red")
}
plot_data = tibble(level = unique(cows$level)[-1]) |>
mutate(effect_b = coef(fit2)[1]*level,
effect_c = coef(fit3)[2:4],
se_c = se(fit3)[2:4])
num_lines <- 4
fit_2_draws <- as_tibble(fit2)
plot_b_data <- tibble(level_x = seq(0,.4,.02))
base_plot <- plot_data |>
ggplot() + geom_point(aes(x = level, y= effect_c)) +
geom_errorbar(aes(x=level, ymin = effect_c - se_c, ymax= effect_c + se_c))
plot <- base_plot
for(i in 1:num_lines)
{
plot_b_data |> mutate(y = fit_2_draws[i,2]*level_x + fit_2_draws[i,1])
plot <- plot + geom_line(aes(x=level_x, y = y), color = "red")
}
plot
plot_b_data
plot_data = tibble(level = unique(cows$level)[-1]) |>
mutate(effect_b = coef(fit2)[1]*level,
effect_c = coef(fit3)[2:4],
se_c = se(fit3)[2:4])
num_lines <- 4
fit_2_draws <- as_tibble(fit2)
plot_b_data <- tibble(level_x = seq(0,.4,.02))
base_plot <- plot_data |>
ggplot() + geom_point(aes(x = level, y= effect_c)) +
geom_errorbar(aes(x=level, ymin = effect_c - se_c, ymax= effect_c + se_c))
plot <- base_plot
for(i in 1:num_lines)
{
plot_b_data <- plot_b_data |> mutate(y = fit_2_draws[i,2]*level_x + fit_2_draws[i,1])
plot <- plot + geom_line(aes(x=level_x, y = y), color = "red", data = plot_b_data)
}
plot
plot_b_data
fit_2_draws[1,2]
fit_2_draws[1,2]*plot_b_data$level_x
plot_b_data$level_x
plot_b_data$level_x * .3
plot_data = tibble(level = unique(cows$level)[-1]) |>
mutate(effect_b = coef(fit2)[1]*level,
effect_c = coef(fit3)[2:4],
se_c = se(fit3)[2:4])
num_lines <- 4
fit_2_draws <- as_tibble(fit2)
plot_b_data <- tibble(level_x = seq(0,.4,.02))
base_plot <- plot_data |>
ggplot() + geom_point(aes(x = level, y= effect_c)) +
geom_errorbar(aes(x=level, ymin = effect_c - se_c, ymax= effect_c + se_c))
plot <- base_plot
for(i in 1:num_lines)
{
plot_b_data <- plot_b_data |> mutate(y = fit_2_draws[[i,2]]*level_x + fit_2_draws[[i,1]])
plot <- plot + geom_line(aes(x=level_x, y = y), color = "red", data = plot_b_data)
}
plot
plot_data = tibble(level = unique(cows$level)[-1]) |>
mutate(effect_b = coef(fit2)[1]*level,
effect_c = coef(fit3)[2:4],
se_c = se(fit3)[2:4])
num_lines <- 40
fit_2_draws <- as_tibble(fit2)
plot_b_data <- tibble(level_x = seq(0,.4,.02))
base_plot <- plot_data |>
ggplot() + geom_point(aes(x = level, y= effect_c)) +
geom_errorbar(aes(x=level, ymin = effect_c - se_c, ymax= effect_c + se_c))
plot <- base_plot
for(i in 1:num_lines)
{
plot_b_data <- plot_b_data |> mutate(y = fit_2_draws[[i,2]]*level_x + fit_2_draws[[i,1]])
plot <- plot + geom_line(aes(x=level_x, y = y), color = "red", alpha = .2 data = plot_b_data)
plot_data = tibble(level = unique(cows$level)[-1]) |>
mutate(effect_b = coef(fit2)[1]*level,
effect_c = coef(fit3)[2:4],
se_c = se(fit3)[2:4])
num_lines <- 40
fit_2_draws <- as_tibble(fit2)
plot_b_data <- tibble(level_x = seq(0,.4,.02))
base_plot <- plot_data |>
ggplot() + geom_point(aes(x = level, y= effect_c)) +
geom_errorbar(aes(x=level, ymin = effect_c - se_c, ymax= effect_c + se_c))
plot <- base_plot
for(i in 1:num_lines)
{
plot_b_data <- plot_b_data |> mutate(y = fit_2_draws[[i,2]]*level_x + fit_2_draws[[i,1]])
plot <- plot + geom_line(aes(x=level_x, y = y), color = "red", alpha = .2, data = plot_b_data)
}
plot
plot_data = tibble(level = unique(cows$level)[-1]) |>
mutate(effect_b = coef(fit2)[1]*level,
effect_c = coef(fit3)[2:4],
se_c = se(fit3)[2:4])
num_lines <- 40
fit_2_draws <- as_tibble(fit2)
plot_b_data <- tibble(level_x = seq(0,.4,.02))
base_plot <- plot_data |>
ggplot() + geom_point(aes(x = level, y= effect_c)) +
geom_errorbar(aes(x=level, ymin = effect_c - se_c, ymax= effect_c + se_c))
plot <- base_plot
for(i in 1:num_lines)
{
plot_b_data <- plot_b_data |> mutate(y = fit_2_draws[[i,2]]*level_x )
plot <- plot + geom_line(aes(x=level_x, y = y), color = "red", alpha = .2, data = plot_b_data)
}
plot
plot_data = tibble(level = unique(cows$level)[-1]) |>
mutate(effect_b = coef(fit2)[1]*level,
effect_c = coef(fit3)[2:4],
se_c = se(fit3)[2:4])
num_lines <- 100
fit_2_draws <- as_tibble(fit2)
plot_b_data <- tibble(level_x = seq(0,.4,.02))
base_plot <- plot_data |>
ggplot() + geom_point(aes(x = level, y= effect_c)) +
geom_errorbar(aes(x=level, ymin = effect_c - se_c, ymax= effect_c + se_c))
plot <- base_plot
for(i in 1:num_lines)
{
plot_b_data <- plot_b_data |> mutate(y = fit_2_draws[[i,2]]*level_x )
plot <- plot + geom_line(aes(x=level_x, y = y), color = "red", alpha = .2, data = plot_b_data)
}
plot
plot_data = tibble(level = unique(cows$level)[-1]) |>
mutate(effect_b = coef(fit2)[2]*level,
se_b = se(fit2)[2]*level,
effect_c = coef(fit3)[2:4],
se_c = se(fit3)[2:4])
num_lines <- 100
fit_2_draws <- as_tibble(fit2)
plot_b_data <- tibble(level_x = seq(0,.4,.02))
base_plot <- plot_data |>
ggplot() + geom_point(aes(x = level, y= effect_c)) +
geom_errorbar(aes(x=level, ymin = effect_c - se_c, ymax= effect_c + se_c)) +
geom_point(aes(x = level, y= effect_b), color = "red") +
geom_errorbar(aes(x=level, ymin = effect_b - se_b, ymax= effect_b + se_b), color = "red")
plot <- base_plot
for(i in 1:num_lines)
{
plot_b_data <- plot_b_data |> mutate(y = fit_2_draws[[i,2]]*level_x )
plot <- plot + geom_line(aes(x=level_x, y = y), color = "red", alpha = .2, data = plot_b_data)
}
plot
plot_data = tibble(level = unique(cows$level)[-1]) |>
mutate(effect_b = coef(fit2)[2]*level,
se_b = se(fit2)[2]*level,
effect_c = coef(fit3)[2:4],
se_c = se(fit3)[2:4])
num_lines <- 100
fit_2_draws <- as_tibble(fit2)
plot_b_data <- tibble(level_x = seq(0,.4,.02))
base_plot <- plot_data |>
ggplot() + geom_point(aes(x = level, y= effect_c)) +
geom_errorbar(aes(x=level, ymin = effect_c - se_c, ymax= effect_c + se_c)) +
geom_point(aes(x = level, y= effect_b), color = "red") +
geom_errorbar(aes(x=level+.05, ymin = effect_b - se_b, ymax= effect_b + se_b), color = "red")
plot <- base_plot
for(i in 1:num_lines)
{
plot_b_data <- plot_b_data |> mutate(y = fit_2_draws[[i,2]]*level_x )
plot <- plot + geom_line(aes(x=level_x, y = y), color = "red", alpha = .2, data = plot_b_data)
}
plot
plot_data = tibble(level = unique(cows$level)[-1]) |>
mutate(effect_b = coef(fit2)[2]*level,
se_b = se(fit2)[2]*level,
effect_c = coef(fit3)[2:4],
se_c = se(fit3)[2:4])
num_lines <- 100
fit_2_draws <- as_tibble(fit2)
plot_b_data <- tibble(level_x = seq(0,.4,.02))
base_plot <- plot_data |>
ggplot() + geom_point(aes(x = level, y= effect_c)) +
geom_errorbar(aes(x=level, ymin = effect_c - se_c, ymax= effect_c + se_c)) +
geom_point(aes(x = level +.01, y= effect_b), color = "red") +
geom_errorbar(aes(x=level+.01, ymin = effect_b - se_b, ymax= effect_b + se_b), color = "red")
plot <- base_plot
for(i in 1:num_lines)
{
plot_b_data <- plot_b_data |> mutate(y = fit_2_draws[[i,2]]*level_x )
plot <- plot + geom_line(aes(x=level_x, y = y), color = "red", alpha = .2, data = plot_b_data)
}
plot
