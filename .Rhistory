name <= str_c(parent$name,"/",name)
}
return(name)
}
gen_dir_name(directory)
directory$sub_dirs
directory$sub_dirs[[1]]
gen_dir_name(directory$sub_dirs[[1]])
is_empty(env_parent(directory))
gen_dir_name <- \(cd){
name <- cd$name
current <- cd
while(! is_empty(env_parent(current))){
current <- env_parent(current)
name <= str_c(current$name,"/",name)
}
return(name)
}
gen_dir_name(directory$sub_dirs[[1]])
gen_dir_name <- \(cd){
name <- cd$name
current <- cd
while(! is_empty(env_parent(current))){
current <- env_parent(current)
name <- str_c(current$name,"/",name)
}
return(name)
}
gen_dir_name(directory$sub_dirs[[1]])
# Directories are environments (so can be modified) of name, sub_dirs, contents.
directory <- env(empty_env(), name = 'root', sub_dirs = NULL,
file_sizes = NULL, file_names= NULL)
curr_dir <- directory
list_of_dirs <- env(empty_env(), root = 0)
process_cd  <- \(cd, new_dir){
new_dir <- trimws(new_dir)
if(new_dir == '/'){
return(directory)
} else if(new_dir == '..'){
return(env_parent(cd)) # will cause error if cd on root
} else {
# As far as i can tell this is never called before ls reveals name
locate <- sapply(cd$sub_dirs, \(x){x$name == new_dir})
return(cd$sub_dirs[locate][[1]])
}
}
gen_dir_name <- \(cd){
name <- cd$name
current <- cd
while(! is_empty(env_parent(current))){
current <- env_parent(current)
name <- str_c(current$name,"/",name)
}
return(name)
}
add_sub <- \(cd, dir) {
new_sub_dir <- env(cd, name= dir, sub_dirs = NULL,
file_sizes = NULL, file_names = NULL)
cd$sub_dirs <- c(cd$sub_dirs, new_sub_dir)
list_of_dirs[[gen_dir_name(new_sub_dir)]] = 0
return(cd)
}
add_size <-  \(cd, size){
dir_name <- gen_dir_name(cd)
list_of_dirs[[dir_name]] = list_of_dirs[[dir_name]] + size
if(is_empty(env_parent(cd))){
return()
}
add_size(env_parent(cd), size)
}
add_file <- \(cd, file) {
file <- str_split(file, " ", simplify= TRUE)
size <- as.numeric(file[1])
cd$file_sizes <- c(cd$file_sizes, size)
cd$file_names <- c(cd$file_names, file[[2]])
# now add file and every to every parent
add_size(cd, size)
return(cd)
}
## Build data structure and accumulate direcotry sizes
for(line in raw_data){
if(substr(line,1,4) == '$ cd') {
curr_dir <- process_cd(curr_dir, substr(line,6,nchar(line)))
} else if(substr(line,1,4) == '$ ls') {
# nothing to do
} else if(substr(line,1,3) == 'dir') {
curr_dir <- add_sub(curr_dir, substr(line,5,nchar(line)))
} else {
# Must be a file now
curr_dir <- add_file(curr_dir, line)
}
}
v_of_dirs <- as_vector(as.list(list_of_dirs))
sum(v_of_dirs[v_of_dirs <= 100000])
sort(v_of_dirs)
v_of_dirs[v_of_dirs > 30000000]
v_of_dirs$root
v_of_dirs['root']
current_free_space = 70000000 - v_of_dirs['root']
v_of_dirs[v_of_dirs > 30000000]
current_free_space
current_free_space = 70000000 - v_of_dirs['root']
v_of_dirs[v_of_dirs > (30000000 - current_free_space)]
current_free_space = 70000000 - v_of_dirs['root']
min(v_of_dirs[v_of_dirs > (30000000 - current_free_space)])
character(234234)
?seq_along
seq_along(c(1,2,3))
setwd("~/dataSciDev/ROS/ROSWork")
setwd("~/dataSciDev/ROS/ROSWork")
library(tidyverse)
data <- read_tsv("InfluenzaData.txt")
View(data)
data |> filter(is.na(Year))
library(tidyverse)
data <- read_tsv("InfluenzaData.txt") |> filter(!is.na(Year))
tail(data)
library(tidyverse)
data <- read_tsv("InfluenzaData.txt") |> filter(!is.na(Year)) |> select(-Notes)
tail(data)
? read_tsv
library(tidyverse)
data <- read_tsv("InfluenzaData.txt", na = ("Not Applicable")) |> filter(!is.na(Year)) |> select(-Notes)
tail(data)
data$Year
data['Year Code']
library(tidyverse)
data <- read_tsv("InfluenzaData.txt", na = ("Not Applicable")) |> filter(!is.na(Year)) |> select(-Notes,-`Year Code`)
tail(data)
View(data)
library(tidyverse)
data <- read_tsv("InfluenzaData.txt", na = ("Not Applicable")) |> filter(!is.na(Year)) |> select(-Notes,-`Year Code`, -`Gender Code`, -`Ten-Year Age Groups Code`)
tail(data)
library(tidyverse)
data <- read_tsv("InfluenzaData.txt", na = ("Not Applicable")) |>
filter(!is.na(Year)) |>
select(-Notes,-`Year Code`, -`Gender Code`, -`Ten-Year Age Groups Code`) |>
rename(age  = `Ten-Year Age Groups`)
tail(data)
library(tidyverse)
data <- read_tsv("InfluenzaData.txt", na = ("Not Applicable")) |>
filter(!is.na(Year)) |>
select(-Notes,-`Year Code`, -`Gender Code`, -`Ten-Year Age Groups Code`) |>
rename(Age  = `Ten-Year Age Groups`)
tail(data)
library(tidyverse)
data <- read_tsv("InfluenzaData.txt", na = ("Not Applicable")) |>
filter(!is.na(Year)) |>
select(-Notes,-`Year Code`, -`Gender Code`,
-`Ten-Year Age Groups Code`, -`Crude Rate`) |>
rename(Age  = `Ten-Year Age Groups`)
tail(data)
library(tidyverse)
data <- read_tsv("InfluenzaData.txt", na = ("Not Applicable")) |>
filter(!is.na(Year)) |>
select(-Notes,-`Year Code`, -`Gender Code`,
-`Ten-Year Age Groups Code`, -`Crude Rate`) |>
rename(Age  = `Ten-Year Age Groups`) |> filter(Age != 'Not Stated')
tail(data)
library(tidyverse)
data <- read_tsv("InfluenzaData.txt", na = ("Suppressed", "Not Applicable")) |>
library(tidyverse)
data <- read_tsv("InfluenzaData.txt", na = c("Suppressed", "Not Applicable")) |>
filter(!is.na(Year)) |>
select(-Notes,-`Year Code`, -`Gender Code`,
-`Ten-Year Age Groups Code`, -`Crude Rate`) |>
rename(Age  = `Ten-Year Age Groups`) |> filter(Age != 'Not Stated')
tail(data)
ggplot(data = data, aes(x=year, y= deaths)) +
geom_line()
ggplot(data = data, aes(x=Year, y= Deaths)) +
geom_line()
ggplot(data = data, aes(x=Year, y= Deaths)) +
geom_line(mapping = aes(color=Age, type=Gender))
? geom_line
ggplot(data = data, aes(x=Year, y= Deaths)) +
geom_point(mapping = aes(color=Age, type=Gender))
ggplot(data = data, aes(x=Year, y= Deaths)) +
geom_path(mapping = aes(color=Age, type=Gender))
ggplot(data = data, aes(x=Year, y= Deaths)) +
geom_line(mapping = aes(color=Age, type=Gender))
ggplot(data = data, aes(x=Year, y= Deaths)) +
geom_line(mapping = aes(color=Age, type=linetype))
ggplot(data = data, aes(x=Year, y= Deaths)) +
geom_line(mapping = aes(color=Age, linetype=Gender))
ggplot(data = data, aes(x=Age, y= Deaths)) +
geom_line(mapping = aes(color=Age, linetype=Gender))
library(tidyverse)
data <- read_tsv("InfluenzaData.txt", na = c("Suppressed", "Not Applicable")) |>
filter(!is.na(Year)) |>
select(-Notes,-`Year Code`, -`Gender Code`,
-`Crude Rate`) |>
rename(Age  = `Ten-Year Age Groups`) |> filter(Age != 'Not Stated')
tail(data)
library(tidyverse)
data <- read_tsv("InfluenzaData.txt", na = c("Suppressed", "Not Applicable")) |>
filter(!is.na(Year)) |>
select(-Notes,-`Year Code`, -`Gender Code`,
-`Ten-Year Age Groups Code`, -`Crude Rate`) |>
rename(Age  = `Ten-Year Age Groups`) |> filter(Age != 'Not Stated')
tail(data)
unique(data$Age)
str_split("35-55","-")
str_split("35-55","-")[1]
str_split("35-55","-")[[1]
]
str_split("35-55","-")[[1]]
str_split("35-55","-")
str_split("35-55","-",simplify = TRUE)
str_split("35-55","-",simplify = TRUE)[1]
bottom_age <- \(age){
if(str_sub(age,1,1)=='<')
return(0)
return(str_split(age,"-",simplify = TRUE)[1])
}
data |> group_by(bottom_age(Age)) |> summarize(deaths = sum(Deaths))
bottom_age('34-44')
bottom_age('<')
bottom_age('< 3')
bottom_age(data$Age)
bottom_age <- \(age){
if(str_sub(age,1,1)=='<')
return(0)
return(str_split(age,"-",simplify = TRUE)[1])
}
data |> rowwise() |> mutate(age_start = bottom_age(Age))
bottom_age('<')
bottom_age('33-4')
bottom_age <- \(age){
if(str_sub(age,1,1)=='<')
return(0)
return(as.numeric(str_split(age,"-",simplify = TRUE)[1]))
}
data |> rowwise() |> mutate(age_start = bottom_age(Age))
data |> filter(is.na(Deaths))
data[is.na(data$Deaths)]
data[is.na(data$Deaths),]
data[is.na(data$Deaths),] = 0
library(tidyverse)
data <- read_tsv("InfluenzaData.txt", na = c("Suppressed", "Not Applicable")) |>
filter(!is.na(Year)) |>
select(-Notes,-`Year Code`, -`Gender Code`,
-`Ten-Year Age Groups Code`, -`Crude Rate`) |>
rename(Age  = `Ten-Year Age Groups`) |> filter(Age != 'Not Stated')
tail(data)
unique(data$Age)
data[is.na(data$Deaths),Deaths] = 0
data[is.na(data$Deaths),"Deaths"] = 0
bottom_age <- \(age){
if(str_sub(age,1,1)=='<')
return(0)
return(as.numeric(str_split(age,"-",simplify = TRUE)[1]))
}
data |> rowwise() |> mutate(age_start = bottom_age(Age))
data[is.na(data$Deaths),"Deaths"] = 0
bottom_age <- \(age){
if(str_sub(age,1,1)=='<')
return(0)
return(as.numeric(str_split(age,"-",simplify = TRUE)[1]))
}
regroup <- \(age_string){
bottom <- bottom_age(age_string)
if(bottom < 15)
return("Child")
if(bottom < 35)
return("Young Adult")
if(bottom < 65)
return("Adult")
return("Senior")
}
data |> rowwise() |> mutate(age_group= regroup(Age))
data$Age
regroup(data$Age)
sapply(data$Age, regroup)
data$Age[[1]]
regroup(data$Age[[1]])
regroup(data$Age[[2]])
regroup(data$Age[[33]])
length(data$Age)
data$Age[[33]]
?str_split
data[is.na(data$Deaths),"Deaths"] = 0
bottom_age <- \(age){
if(str_sub(age,1,1)=='<')
return(0)
return(as.numeric(str_split(age,"-|+",simplify = TRUE)[1]))
}
regroup <- \(age_string){
bottom <- bottom_age(age_string)
if(bottom < 15)
return("Child")
if(bottom < 35)
return("Young Adult")
if(bottom < 65)
return("Adult")
return("Senior")
}
data |> rowwise() |> mutate(age_group= regroup(Age))
data[is.na(data$Deaths),"Deaths"] = 0
bottom_age <- \(age){
if(str_sub(age,1,1)=='<')
return(0)
return(as.numeric(str_split(age,"-|\\+",simplify = TRUE)[1]))
}
regroup <- \(age_string){
bottom <- bottom_age(age_string)
if(bottom < 15)
return("Child")
if(bottom < 35)
return("Young Adult")
if(bottom < 65)
return("Adult")
return("Senior")
}
data |> rowwise() |> mutate(age_group= regroup(Age))
data[is.na(data$Deaths),"Deaths"] = 0
bottom_age <- \(age){
if(str_sub(age,1,1)=='<')
return(0)
return(as.numeric(str_split(age,"-|\\+",simplify = TRUE)[1]))
}
regroup <- \(age_string){
bottom <- bottom_age(age_string)
if(bottom < 15)
return("Child")
if(bottom < 35)
return("Young Adult")
if(bottom < 65)
return("Adult")
return("Senior")
}
data |> rowwise() |> mutate(age_group= regroup(Age)) |> ungroup() |>
group_by(age_group, gender, year) |> summarize(deaths = sum(Deaths), pop = sum(Population))
data[is.na(data$Deaths),"Deaths"] = 0
bottom_age <- \(age){
if(str_sub(age,1,1)=='<')
return(0)
return(as.numeric(str_split(age,"-|\\+",simplify = TRUE)[1]))
}
regroup <- \(age_string){
bottom <- bottom_age(age_string)
if(bottom < 15)
return("Child")
if(bottom < 35)
return("Young Adult")
if(bottom < 65)
return("Adult")
return("Senior")
}
data |> rowwise() |> mutate(age_group= regroup(Age)) |> ungroup() |>
group_by(age_group, Gender, Year) |> summarize(deaths = sum(Deaths), pop = sum(Population))
? summarize
library(tidyverse)
data <- read_tsv("InfluenzaData.txt", na = c("Suppressed", "Not Applicable")) |>
filter(!is.na(Year)) |>
select(-Notes,-`Year Code`, -`Gender Code`,
-`Ten-Year Age Groups Code`, -`Crude Rate`) |>
rename(Age  = `Ten-Year Age Groups`) |> filter(Age != 'Not Stated')
tail(data)
data[is.na(data$Deaths),"Deaths"] = 0
unique(data$Age)
bottom_age <- \(age){
if(str_sub(age,1,1)=='<')
return(0)
return(as.numeric(str_split(age,"-|\\+",simplify = TRUE)[1]))
}
regroup <- \(age_string){
bottom <- bottom_age(age_string)
if(bottom < 15)
return("Child")
if(bottom < 35)
return("Young Adult")
if(bottom < 65)
return("Adult")
return("Senior")
}
data_grouped <-
data |> rowwise() |> mutate(age_group= regroup(Age)) |> ungroup() |>
group_by(age_group, Gender, Year) |>
summarize(deaths = sum(Deaths), pop = sum(Population), .groups = "drop") |>
mutate(rate = deaths/pop)
ggplot(data = data_grouped, aes(x=Age, y= rate)) +
geom_line(mapping = aes(color = Age, linetype=Gender))
ggplot(data = data_grouped, aes(x=Year, y= rate)) +
geom_line(mapping = aes(color = AgeGroup, linetype=Gender))
View(data_grouped)
ggplot(data = data_grouped, aes(x=Year, y= rate)) +
geom_line(mapping = aes(color = age_group, linetype=Gender))
ggplot(data = data_grouped, aes(x=Year, y= log(rate)) +
geom_line(mapping = aes(color = age_group, linetype=Gender))
ggplot(data = data_grouped, aes(x=Year, y= log(rate)) +
geom_line(mapping = aes(color = age_group, linetype=Gender))
ggplot(data = data_grouped, aes(x=Year, y= log(rate))) +
geom_line(mapping = aes(color = age_group, linetype=Gender))
ggplot(data = data_grouped, aes(x=Year, y= rate)) +
geom_line(mapping = aes(color = age_group, linetype=Gender))
library(tidyverse)
data <- read_tsv("InfluenzaWithRegion.txt", na = c("Suppressed", "Not Applicable")) |>
filter(!is.na(Year)) |>
select(-Notes,-`Year Code`, -`Gender Code`,
-`Ten-Year Age Groups Code`, -`Crude Rate`) |>
rename(Age  = `Ten-Year Age Groups`) |> filter(Age != 'Not Stated')
tail(data)
library(tidyverse)
data <- read_tsv("InfluenzaWithRegion.txt", na = c("Suppressed", "Not Applicable")) |>
filter(!is.na(Year)) |>
select(-Notes,-`Year Code`, -`Gender Code`,
-`Ten-Year Age Groups Code`, -`Crude Rate`,-`Census Region Code`) |>
rename(Age  = `Ten-Year Age Groups`) |> filter(Age != 'Not Stated')
tail(data)
library(tidyverse)
data <- read_tsv("InfluenzaWithRegion.txt", na = c("Suppressed", "Not Applicable")) |>
filter(!is.na(Year)) |>
select(-Notes,-`Year Code`, -`Gender Code`,
-`Ten-Year Age Groups Code`, -`Crude Rate`,-`Census Region Code`) |>
rename(Age  = `Ten-Year Age Groups`, region = `Census Region`) |> filter(Age != 'Not Stated')
tail(data)
data[is.na(data$Deaths),"Deaths"] = 0
unique(data$Age)
bottom_age <- \(age){
if(str_sub(age,1,1)=='<')
return(0)
return(as.numeric(str_split(age,"-|\\+",simplify = TRUE)[1]))
}
regroup <- \(age_string){
bottom <- bottom_age(age_string)
if(bottom < 15)
return("Child")
if(bottom < 35)
return("Young Adult")
if(bottom < 65)
return("Adult")
return("Senior")
}
data_grouped <-
data |> rowwise() |> mutate(age_group= regroup(Age)) |> ungroup() |>
group_by(age_group, Gender, Year, region) |>
summarize(deaths = sum(Deaths), pop = sum(Population), .groups = "drop") |>
mutate(rate = deaths/pop)
head(data_grouped)
ggplot(data = data_grouped, aes(x=Year, y= rate)) +
geom_line(mapping = aes(color = age_group, linetype=Gender))
ggplot(data = data_grouped, aes(x=Year, y= rate)) +
geom_line(mapping = aes(color = age_group, linetype=Gender)) +
facet_grid(vars(region))
ggplot(data = data_grouped, aes(x=Year, y= rate)) +
geom_line(mapping = aes(color = age_group, linetype=Gender)) +
facet_grid(cols(region))
ggplot(data = data_grouped, aes(x=Year, y= rate)) +
geom_line(mapping = aes(color = age_group, linetype=Gender)) +
facet_grid(vars(region))
ggplot(data = data_grouped, aes(x=Year, y= rate)) +
geom_line(mapping = aes(color = age_group, linetype=Gender)) +
facet_grid(cols = vars(region))
unique(data$region)
bottom_age <- \(age){
if(str_sub(age,1,1)=='<')
return(0)
return(as.numeric(str_split(age,"-|\\+",simplify = TRUE)[1]))
}
regroup <- \(age_string){
bottom <- bottom_age(age_string)
if(bottom < 15)
return("Child")
if(bottom < 35)
return("Young Adult")
if(bottom < 65)
return("Adult")
return("Senior")
}
data_grouped <-
data |> rowwise() |> mutate(age_group= regroup(Age)) |> ungroup() |>
group_by(age_group, Gender, Year, region) |>
summarize(deaths = sum(Deaths), pop = sum(Population), .groups = "drop") |>
mutate(rate = deaths/pop)
head(data_grouped)
ggplot(data = data_grouped, aes(x=Year, y= rate)) +
geom_line(mapping = aes(color = age_group, linetype=Gender)) +
facet_wrap(vars(region))
library(tidyverse)
data <- read_tsv("InfluenzaWithRegion.txt", na = c("Suppressed", "Not Applicable")) |>
filter(!is.na(Year)) |>
select(-Notes,-`Year Code`, -`Gender Code`,
-`Ten-Year Age Groups Code`, -`Crude Rate`,-`Census Region Code`) |>
rename(Age  = `Ten-Year Age Groups`, region = `Census Region`) |> filter(Age != 'Not Stated')
tail(data)
data[is.na(data$Deaths),"Deaths"] = 0
unique(data$Age)
bottom_age <- \(age){
if(str_sub(age,1,1)=='<')
return(0)
return(as.numeric(str_split(age,"-|\\+",simplify = TRUE)[1]))
}
regroup <- \(age_string){
bottom <- bottom_age(age_string)
if(bottom < 15)
return("Child")
if(bottom < 35)
return("Young Adult")
if(bottom < 65)
return("Adult")
return("Senior")
}
data_grouped <-
data |> rowwise() |> mutate(age_group= regroup(Age)) |> ungroup() |>
group_by(age_group, Gender, Year, region) |>
summarize(deaths = sum(Deaths), pop = sum(Population), .groups = "drop") |>
mutate(rate = deaths/pop)
head(data_grouped)
ggplot(data = data_grouped, aes(x=Year, y= rate)) +
geom_line(mapping = aes(color = age_group, linetype=Gender)) +
facet_wrap(vars(region))
